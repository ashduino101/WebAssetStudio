[package]
name = "webassetstudio"
version = "0.1.0"
authors = ["ashduino101"]
edition = "2018"
license = "MIT"
repository = "https://github.com/ashduino101/WebAssetStudio"
description = "An online tool to view, modify, and extract game asset files for a variety of game engines."

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
bytes = { git = "https://github.com/ashduino101/bytes" }
wasm-bindgen = "0.2.84"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
bitfields = "0.2.0"
lzma-rs = { version = "0.3.0", features = ["stream"] }
lzxd = "0.2.5"
js-sys = "0.3.68"
wasm-bindgen-futures = "0.4.41"
wasm-bindgen-test = "0.3.41"
png = "0.17.10"
texture2ddecoder = { git = "https://github.com/ashduino101/texture2ddecoder-rgba" }
anyhow = "1.0.81"
three-d = { version = "0.17", features = ["egui-gui"] }
three-d-asset = { version = "0.7", features = ["gltf", "hdr", "jpeg", "http"] }
num = "0.4.1"
num-derive = "0.4.2"
num-traits = "0.2.18"
bitstream-io = "2.2.0"
rand = "0.8.5"
byteorder = "1.5.0"
crc32fast = "1.4.0"
zerocopy = "0.7.32"
bzip2-rs = "0.1.2"
tar = "0.4.40"
bitflags = "2.5.0"
regex = "1.10.4"
image = "0.25.2"
serde = "1.0.204"
serde_derive = "1.0.204"
async-std = "1.12.0"
mojoshader = { path = "mojoshader" }
#wgpu = "0.19.1"

[dependencies.ogg]
version = "0.9.1"
features = ["bytes"]

[dependencies.lz4_flex]
version = "0.11.2"
features = ["safe-decode", "safe-encode"]

[dependencies.web-sys]
version = "0.3.67"  # keep inline with version used by wgpu
features = [
    'Document',
    'Element',
    'HtmlElement',
    'Node',
    'Window',
    "Blob",
    "Url",
    "DomTokenList",
    "NamedNodeMap"
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"
include_dir = "0.7.3"

[build-dependencies]
bindgen = "*"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm32-unknown-unknown-openbsd-libc = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
